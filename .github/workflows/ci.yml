name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

# Improve security by defining permissions at the workflow level
permissions:
  contents: read
  pull-requests: read

jobs:
  # Lint job - checks code quality and style
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        continue-on-error: false

  # Type check job - validates TypeScript types
  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npx tsc --noEmit
        continue-on-error: false

  # Build job - ensures the project builds successfully
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        continue-on-error: false

      # Cache build artifacts for faster subsequent builds
      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            .next
            .turbo
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.ts', '**/*.tsx', '**/*.js', '**/*.jsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

  # Test job (uncomment when tests are added)
  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'
  #         cache: 'npm'
  #
  #     - name: Install dependencies
  #       run: npm ci
  #
  #     - name: Run tests
  #       run: npm test
  #
  #     - name: Generate coverage report
  #       run: npm run test:coverage
  #
  #     - name: Upload coverage
  #       uses: codecov/codecov-action@v4
  #       with:
  #         files: ./coverage/lcov.info
